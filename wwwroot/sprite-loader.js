/**
 * Sprite Loader - Dynamically loads and injects SVG sprites into the DOM
 * Uses sprite-manifest.json generated by SvgSpriteWebpackPlugin
 */
(function () {
  "use strict";

  // Function to load sprite manifest
  async function loadSpriteManifest() {
    try {
      var response = await fetch("build/sprite-manifest.json");
      if (!response.ok) {
        throw new Error("Failed to load sprite manifest: " + response.status);
      }
      var manifest = await response.json();
      return manifest.sprites || [];
    } catch (error) {
      throw new Error("Invalid sprite manifest: " + error.message);
    }
  }

  // Function to load and inject a single sprite
  async function loadSprite(spriteUrl) {
    var response = await fetch(spriteUrl);
    if (!response.ok) {
      throw new Error(
        "Failed to load sprite: " + spriteUrl + " (" + response.status + ")"
      );
    }

    var svgContent = await response.text();

    // Create a div to hold the sprite
    var spriteContainer = document.createElement("div");
    spriteContainer.style.display = "none";
    spriteContainer.innerHTML = svgContent;

    // Insert at the beginning of body
    document.body.insertBefore(spriteContainer, document.body.firstChild);

    console.log("SVG sprite loaded:", spriteUrl);
  }

  // Function to load all sprites
  async function loadAllSprites(spritePaths) {
    var promises = spritePaths.map(function (spritePath) {
      return loadSprite("build/" + spritePath);
    });

    return Promise.all(promises);
  }

  // Main function to initialize sprite loading
  async function initSpriteLoader() {
    // Only load if document is ready
    if (document.readyState === "loading") {
      document.addEventListener("DOMContentLoaded", initSpriteLoader);
      return;
    }

    console.log("Initializing sprite loader...");

    try {
      var spritePaths = await loadSpriteManifest();
      console.log("Found", spritePaths.length, "sprite(s) to load");
      await loadAllSprites(spritePaths);
      console.log("All sprites loaded successfully");
    } catch (error) {
      console.warn("Sprite loader failed:", error.message);
    }
  }

  // Start the process
  initSpriteLoader();
})();
